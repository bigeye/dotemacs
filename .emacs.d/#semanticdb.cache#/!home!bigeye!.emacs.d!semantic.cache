;; Object .emacs.d/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file ".emacs.d/"
  :tables (list 
   (semanticdb-table "etheme.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("cl" include nil nil [929 942])
            ("etheme" customgroup (:user-visible-flag t) nil [945 1061])
            ("etheme-current-theme" variable nil nil [1063 1121])
            ("etheme-set-theme-hook" variable nil nil [1123 1211])
            ("etheme-alist" variable (:default-value (quote (("cinsk" 1) ("vim" 2) ("elflord" 3) ("morning" 4) ("canyon" 5) ("blue" 6) ("darkblue" 7) ("desert" 8)))) nil [1213 1408])
            ("etheme-saved-face-list" variable (:default-value (quote (modeline modeline-inactive isearch font-lock-builtin-face font-lock-comment-face font-lock-constant-face font-lock-type-face font-lock-variable-name-face font-lock-function-name-face font-lock-preprocessor-face font-lock-string-face font-lock-keyword-face))) nil [3003 3409])
            ("etheme-cinsk-faces" variable (:default-value (quote ((default :foreground "powder blue" :background "black") (modeline :foreground "white" :background "IndianRed4") (modeline-inactive :foreground "grey80" :background "gray30") (isearch :foreground "brown4" :background "palevioletred2") (font-lock-comment-face :foreground "chocolate1") (font-lock-constant-face :foreground "Aquamarine") (font-lock-type-face :foreground "PaleGreen") (font-lock-variable-name-face :foreground "LightGoldenrod") (font-lock-function-name-face :foreground "LightSkyBlue") (font-lock-preprocessor-face :foreground unspecified) (font-lock-string-face :foreground "LightSalmon") (font-lock-keyword-face :foreground "Cyan1")))) nil [3418 4238])
            ("etheme-cinsk-hook" variable nil nil [4240 4297])
            ("etheme-canyon-faces" variable (:default-value (quote ((default :foreground "grey30" :background "NavajoWhite2") (modeline :foreground "grey90" :background "chocolate2") (modeline-inactive :foreground "grey80" :background "chocolate4") (isearch :foreground "brown4" :background "palevioletred2") (font-lock-builtin-face :foreground "DarkGoldenrod4") (font-lock-comment-face :foreground "Firebrick") (font-lock-constant-face :foreground "purple4") (font-lock-type-face :foreground "aquamarine4") (font-lock-variable-name-face :foreground "cyan4") (font-lock-function-name-face :foreground "green4") (font-lock-preprocessor-face :foreground "IndianRed3") (font-lock-string-face :foreground "HotPink4") (font-lock-keyword-face :foreground "DarkOrange4")))) nil [4299 5076])
            ("etheme-canyon-hook" variable nil nil [5078 5137])
            ("etheme-vim-faces" variable (:default-value (quote ((default :foreground "gray" :background "black") (modeline :foreground "black" :background "gray75") (modeline-inactive :foreground "grey80" :background "gray30") (isearch :foreground "brown4" :background "palevioletred2") (font-lock-comment-face :foreground "RoyalBlue") (font-lock-constant-face :foreground "Aquamarine") (font-lock-type-face :foreground "green") (font-lock-variable-name-face :foreground "LightGoldenrod") (font-lock-function-name-face :foreground "LightSkyBlue") (font-lock-preprocessor-face :foreground "magenta") (font-lock-string-face :foreground "red") (font-lock-keyword-face :foreground "DarkOrange2")))) nil [5139 5956])
            ("etheme-vim-hook" variable nil nil [5958 6011])
            ("etheme-elflord-faces" variable (:default-value (quote ((default :foreground "cyan" :background "black") (modeline :foreground "black" :background "gray75") (modeline-inactive :foreground "grey80" :background "gray30") (isearch :foreground "brown4" :background "palevioletred2") (font-lock-comment-face :foreground "#80a0ff") (font-lock-constant-face :foreground "magenta") (font-lock-type-face :foreground "#60ff60") (font-lock-variable-name-face :foreground "#40ffff") (font-lock-function-name-face :foreground "white") (font-lock-preprocessor-face :foreground "#ff80ff") (font-lock-string-face :foreground "magenta") (font-lock-keyword-face :foreground "#aa4444")))) nil [6013 6803])
            ("etheme-elflord-hook" variable nil nil [6805 6866])
            ("etheme-morning-faces" variable (:default-value (quote ((default :foreground "black" :background "grey90") (modeline :foreground unspecified :background "LightBlue1") (modeline-inactive :foreground unspecified :background "LightBlue3") (isearch :foreground unspecified :background "yellow") (font-lock-comment-face :foreground "blue") (font-lock-constant-face :foreground "magenta") (font-lock-type-face :foreground "forest green") (font-lock-variable-name-face :foreground "blue4") (font-lock-function-name-face :foreground "sienna4") (font-lock-preprocessor-face :foreground "DarkViolet") (font-lock-string-face :foreground "magenta") (font-lock-keyword-face :foreground "SlateBlue")))) nil [6868 7677])
            ("etheme-morning-hook" variable nil nil [7679 7740])
            ("etheme-blue-faces" variable (:default-value (quote ((default :foreground "white" :background "navy") (modeline :foreground "black" :background "deep sky blue") (modeline-inactive :foreground "grey60" :background "navy") (isearch :foreground unspecified :background "yellow") (font-lock-builtin-face :foreground "yellow") (font-lock-comment-face :foreground "LightGrey") (font-lock-constant-face :foreground "cyan") (font-lock-type-face :foreground "yellow") (font-lock-variable-name-face :foreground "burlywood") (font-lock-function-name-face :foreground "beige") (font-lock-preprocessor-face :foreground "green") (font-lock-string-face :foreground "cyan") (font-lock-keyword-face :foreground "tomato")))) nil [7742 8512])
            ("etheme-blue-hook" variable nil nil [8514 8569])
            ("etheme-darkblue-faces" variable (:default-value (quote ((default :foreground "LightGrey" :background "#000040") (modeline :foreground "black" :background "deep sky blue") (modeline-inactive :foreground "grey60" :background "navy") (isearch :foreground unspecified :background "yellow") (font-lock-builtin-face :foreground "yellow") (font-lock-comment-face :foreground "#80a0ff") (font-lock-constant-face :foreground "cyan") (font-lock-type-face :foreground "#60ff60") (font-lock-variable-name-face :foreground "#40ffff") (font-lock-function-name-face :foreground "beige") (font-lock-preprocessor-face :foreground "#ff80ff") (font-lock-string-face :foreground "#ffa0a0") (font-lock-keyword-face :foreground "green")))) nil [8571 9353])
            ("etheme-darkblue-hook" variable nil nil [9355 9418])
            ("etheme-desert-faces" variable (:default-value (quote ((default :foreground "white" :background "grey20") (modeline :foreground "black" :background "deep sky blue") (modeline-inactive :foreground "grey20" :background "#c2bfa5") (isearch :foreground "slategrey" :background "khaki") (font-lock-builtin-face :foreground "yellow") (font-lock-comment-face :foreground "SkyBlue") (font-lock-constant-face :foreground "#ffa0a0") (font-lock-type-face :foreground "darkkhaki") (font-lock-variable-name-face :foreground "palegreen") (font-lock-function-name-face :foreground "beige") (font-lock-preprocessor-face :foreground "indianred") (font-lock-string-face :foreground "#ffa0a0") (font-lock-keyword-face :foreground "navajowhite")))) nil [9420 10212])
            ("etheme-desert-hook" variable nil nil [10214 10275])
            ("etheme-set-faces" function (:arguments ("theme")) nil [10278 10467])
            ("etheme-run-hook" function (:arguments ("theme-name")) nil [10469 10624])
            ("etheme-add-hook" function (:arguments ("theme-name" "function" "append")) nil [10626 10838])
            ("etheme-apply-theme" function (:arguments ("theme-name")) nil [10840 11122])
            ("etheme-set-theme" function
               (:user-visible-flag t
                :arguments ("theme-name"))
                nil [11124 11488])
            ("etheme-add-hook" code nil nil [11490 11540])
            ("etheme-add-hook" code nil nil [11541 11595])
            ("etheme-add-hook" code nil nil [11596 11659])
            ("etheme-add-hook" code nil nil [11660 11722])
            ("etheme-add-hook" code nil nil [11724 11778])
            ("etheme-add-hook" code nil nil [11779 11837])
            ("etheme-add-hook" code nil nil [11838 11905])
            ("etheme-add-hook" code nil nil [11906 11972])
            ("etheme-add-hook" code nil nil [11974 12028])
            ("etheme-add-hook" code nil nil [12029 12087])
            ("etheme-add-hook" code nil nil [12088 12155])
            ("etheme-add-hook" code nil nil [12156 12222])
            ("etheme-add-hook" code nil nil [12224 12275])
            ("etheme-add-hook" code nil nil [12276 12333])
            ("etheme-add-hook" code nil nil [12334 12399])
            ("etheme-add-hook" code nil nil [12400 12464])
            ("etheme-add-hook" code nil nil [12466 12518])
            ("etheme-add-hook" code nil nil [12519 12576])
            ("etheme-add-hook" code nil nil [12577 12643])
            ("etheme-add-hook" code nil nil [12644 12709])
            ("etheme-add-hook" code nil nil [12711 12762])
            ("etheme-add-hook" code nil nil [12763 12819])
            ("etheme-add-hook" code nil nil [12820 12886])
            ("etheme-add-hook" code nil nil [12887 12952])
            ("etheme-add-hook" code nil nil [12954 13009])
            ("etheme-add-hook" code nil nil [13010 13070])
            ("etheme-add-hook" code nil nil [13071 13139])
            ("etheme-add-hook" code nil nil [13140 13208])
            ("etheme-add-hook" code nil nil [13210 13263])
            ("etheme-add-hook" code nil nil [13264 13322])
            ("etheme-add-hook" code nil nil [13323 13389])
            ("etheme-add-hook" code nil nil [13390 13456])
            ("etheme" package nil nil [13458 13475]))          
    :file "etheme.el"
    :pointmax 13477
    :fsize 13476
    :lastmodtime '(19517 59450)
    :unmatched-syntax '((close-paren 942 . 943) (symbol 909 . 926) (open-paren 908 . 909))
    )
   )
  :file "!home!bigeye!.emacs.d!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
